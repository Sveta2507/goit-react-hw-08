{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.scss","components/Logo/Logo.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Notifications/Notifications.js","components/Form/Form.js","components/ContactListItem/ContactListItem.js","redux/actions.js","redux/selectors.js","components/ContactList/ContactList.js","redux/operations.js","components/Filter/Filter.js","components/Logo/Logo.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","id","Alert","disableAlert","props","change","clearTimeout","setTimeout","Component","Form","state","name","number","alert","handleChange","event","target","value","setState","handleSubmit","preventDefault","contact","addContact","changeAlert","bool","prevProps","prevState","isExists","this","TransitionGroup","className","classes","notif","CSSTransition","timeout","classNames","onSubmit","label","type","required","onChange","placeholder","button","ContactlistItem","deleteContact","onClick","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","getContact","contacts","getFilter","filter","getAll","createSelector","toLowerCase","includes","mapDispatchToProps","handleDelete","dispatch","axios","delete","then","catch","error","connect","visibleContacts","component","styles","contactsUl","map","item","in","length","Logo","isLoad","main","App","obj","find","elem","handleFilterChange","e","persistedTasks","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","ContactList","post","data","initialState","contactsReducer","createReducer","action","payload","filterReducer","notificationReducer","loadingReducer","store","configureStore","reducer","isLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80d61f23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3U-nP\",\"label\":\"Form_label__1OLFt\",\"button\":\"Form_button__3x8iX\",\"enter\":\"Form_enter__1sHNK\",\"enterActive\":\"Form_enterActive__EVTQP\",\"exit\":\"Form_exit__zQpm5\",\"exitActive\":\"Form_exitActive__1T-z-\",\"notif\":\"Form_notif__2-p_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsUl\":\"ContactList_contactsUl__2rftV\",\"enter\":\"ContactList_enter__2Mn_C\",\"enterActive\":\"ContactList_enterActive__3ftqM\",\"exit\":\"ContactList_exit__NHoqB\",\"exitActive\":\"ContactList_exitActive__1V9Fo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Logo_main__1sPJM\",\"enter\":\"Logo_enter__3P2Zn\",\"enterActive\":\"Logo_enterActive__3rHC-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactListItem_section__HHlaA\",\"button\":\"ContactListItem_button__2kWkc\",\"swing\":\"ContactListItem_swing__1t_MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2F9bI\",\"label\":\"Filter_label__1q2jL\"};","import React, { Component } from \"react\";\r\n\r\nlet id;\r\nclass Alert extends Component {\r\n  disableAlert = () => {\r\n    this.props.change(false);\r\n  };\r\n\r\n  componentDidMount() {\r\n    clearTimeout(id);\r\n  }\r\n\r\n  render() {\r\n    id = setTimeout(() => {\r\n      this.disableAlert();\r\n    }, 1700);\r\n\r\n    return (\r\n      <h4>\r\n        Warning! You are trying to add contact, which has already been added!\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alert;\r\n","import classes from \"./Form.module.css\";\r\nimport React, { Component } from \"react\";\r\nimport { v4 as id } from \"uuid\";\r\nimport Alert from \"../Notifications/Notifications\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    alert: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.isExists !== this.props.isExists) {\r\n      this.setState({ alert: this.props.isExists });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: id(),\r\n      number: number,\r\n      name: name,\r\n    };\r\n    this.props.addContact(contact);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  changeAlert = (bool) => {\r\n    this.setState({ alert: bool });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <TransitionGroup className={classes.notif}>\r\n          {this.state.alert && (\r\n            <CSSTransition timeout={250} classNames={classes}>\r\n              <Alert change={this.changeAlert} />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={classes.label}>Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter your name please\"\r\n            value={name}\r\n          />\r\n          <label className={classes.label}>Number: </label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter your phone number please\"\r\n            value={number}\r\n          />\r\n          <button type=\"submit\" className={classes.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./ContactListItem.module.css\";\r\n\r\nconst ContactlistItem = ({ id, number, name, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        <p>{name}</p>\r\n        <p>{number}</p>\r\n        <button\r\n          className={classes.button}\r\n          type=\"button\"\r\n          onClick={() => deleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactlistItem;\r\n\r\nContactlistItem.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('ADD_CONTACT_REQUEST');\r\nconst addContactSuccess = createAction('ADD_CONTACT_SUCCESS');\r\nconst addContactError = createAction('ADD_CONTACT_ERROR');\r\n\r\nconst fetchContactRequest = createAction('FETCH_CONTACT_REQUEST');\r\nconst fetchContactSuccess = createAction('FETCH_CONTACT_SUCCESS');\r\nconst fetchContactError = createAction('FETCH_CONTACT_ERROR');\r\n\r\nconst removeContactRequest = createAction('REMOVE_CONTACT_REQUEST');\r\nconst removeContactSuccess = createAction('REMOVE_CONTACT_SUCCESS');\r\nconst removeContactError = createAction('REMOVE_CONTACT_ERROR');\r\n\r\nconst changeFilter = createAction('CHANGE_FILTER');\r\nconst alert = createAction('NOTIFICATION');\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter,\r\n  alert,\r\n};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getIsExist = (state) => state.isExists;\r\nconst getLoading = (state) => state.isLoading;\r\nconst getContact = (state) => state.contacts;\r\nconst getFilter = (state) => state.filter;\r\n\r\nconst getAll = createSelector([getContact, getFilter], (contacts, filter) => {\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n});\r\n\r\nexport { getLoading, getIsExist, getContact, getFilter, getAll };\r\n","import React from \"react\";\r\nimport { ContactlistItem } from \"../ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.scss\";\r\nimport { removeContact } from \"../../redux/operations\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAll } from \"../../redux/selectors\";\r\n\r\nconst Contactlist = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactsUl}>\r\n      {contacts.map((item) => {\r\n        // console.log(item);\r\n        const { name, id, number } = item;\r\n        return (\r\n          <CSSTransition\r\n            key={id}\r\n            timeout={250}\r\n            classNames={styles}\r\n            in={contacts.length > 0}\r\n          >\r\n            <ContactlistItem\r\n              name={name}\r\n              number={number}\r\n              id={id}\r\n              deleteContact={deleteContact}\r\n            />\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\n// export default Contactlist;\r\n\r\nContactlist.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  visibleContacts: getAll(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleDelete: removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contactlist);\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./actions\";\r\n\r\nconst addContact = (contact) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { ...contact })\r\n    .then(({ data }) => {\r\n      dispatch(addContactSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => {\r\n      dispatch(fetchContactSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts${id}`)\r\n    .then(() => {\r\n      dispatch(removeContactSuccess(id));\r\n    })\r\n    .catch((error) => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport { addContact, fetchContact, removeContact };\r\n","import React from \"react\";\r\nimport classes from \"./Filter.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/actions\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\n\r\nconst Filter = ({ onChange, value }) => {\r\n  return (\r\n    <CSSTransition in={value !== \"\"} timeout={0}>\r\n      <>\r\n        <label className={classes.label}>Filter:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={value}\r\n          placeholder=\"Filter contacts if necessary\"\r\n        />\r\n      </>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\n// export default Filter;\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  handleChange: changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Logo.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Logo extends Component {\r\n  state = {\r\n    isLoad: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ isLoad: true });\r\n    }, 150);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TransitionGroup className={classes.main}>\r\n        {this.state.isLoad && (\r\n          <CSSTransition timeout={500} classNames={classes}>\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n        )}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\n// import Notifications from \"./components/Notifications/Notifications\";\r\n// import { Title } from \"./components/Title\";\r\nimport { Form } from \"./components/Form\";\r\nimport { ContactList } from \"./components/ContactList\";\r\nimport { Filter } from \"./components/Filter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Logo from \"./components/Logo/Logo\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"./redux/operations\";\r\nimport { getContact } from \"./redux/selectors\";\r\nimport { alert } from \"./redux/actions\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    name: \"\",\r\n    filter: \"\",\r\n    isExists: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedTasks = localStorage.getItem(\"conctacts\");\r\n    if (persistedTasks) {\r\n      this.setState({ contacts: JSON.parse(persistedTasks) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"conctacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (obj) => {\r\n    const x = this.state.contacts.find((elem) => {\r\n      // return elem.name === obj.name && elem.number === obj.number;\r\n      return elem.name === obj.name;\r\n    });\r\n    if (x) {\r\n      this.setState({\r\n        isExists: true,\r\n      });\r\n      setTimeout(() => this.setState({ isExists: false }), 2000);\r\n      return;\r\n    }\r\n    this.setState((prevState) => {\r\n      return { contacts: [...prevState.contacts, obj], isExists: false };\r\n    });\r\n  };\r\n\r\n  deleteContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  handleFilterChange = (e) => {\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter, isExists } = this.state;\r\n    const filteredContacts = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n    return (\r\n      <>\r\n        <Logo />\r\n        {/* <Notifications name={name} isExists={isExists} /> */}\r\n\r\n        {/* <Title name=\"phonebook\" /> */}\r\n        <Form addContact={this.addContact} isExists={isExists} />\r\n        <Filter\r\n          filteredContacts={this.handleFilterChange}\r\n          value={this.state.filter}\r\n          onChange={this.handleFilterChange}\r\n        />\r\n\r\n        <CSSTransition in={contacts.length > 0} timeout={0}>\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        </CSSTransition>\r\n\r\n        {/* <CSSTransition\r\n          in={inProp}\r\n          timeout={200}\r\n          classNames=\"my-node\"\r\n          // unmountOnExit\r\n        > */}\r\n        {/* </CSSTransition> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// export default App;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContact(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact,\r\n  alert,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter,\r\n  alert,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: \"\",\r\n  isExists: false,\r\n  isLoading: false,\r\n};\r\n\r\nconst onAddContact = (state, action) => [...state, { ...action.payload }];\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter((item) => item.id !== action.payload);\r\n\r\nconst contactsReducer = createReducer(initialState.contacts, {\r\n  [fetchContactSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: onAddContact,\r\n  [removeContactSuccess]: onRemoveContact,\r\n});\r\nconst filterReducer = createReducer(initialState.filter, {\r\n  [changeFilter]: (state, action) => action.payload,\r\n});\r\nconst notificationReducer = createReducer(initialState.isExists, {\r\n  [alert]: (state, action) => action.payload,\r\n});\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nexport { contactsReducer, filterReducer, notificationReducer, loadingReducer };\r\n","import {\r\n  contactsReducer,\r\n  filterReducer,\r\n  notificationReducer,\r\n  loadingReducer,\r\n} from \"./reducers\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter: filterReducer,\r\n    isExists: notificationReducer,\r\n    isLoading: loadingReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}